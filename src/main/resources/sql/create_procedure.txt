CREATE PROCEDURE coffee.proc_saledetail_orderby (in isSalePrice boolean)
begin
   set @score:=0, @rank:=0;
   
   select 
         greatest( @rank := if(@score = if(isSalePrice, saleprice, marginprice), @rank, @rank + 1),  
         least(0, @score := if(isSalePrice,saleprice,marginprice)) ) as rank,
         code, name, price, salecnt, supplyprice, addtax, saleprice, marginrate, marginprice
   from 
      (select no, s.code code, name, price , salecnt ,  
         @saleprice:=price*salecnt saleprice,
         @addtax := ceil(@saleprice/11) addtax,
         @supprice := @saleprice - @addtax supplyprice,
         marginrate ,
         @marPrice := round(@supprice * (marginrate/100)) marginprice
      from  sale s join product p on s.code = p.code ) t
   order by if(isSalePrice,saleprice,marginprice) desc;
    
END;


CREATE PROCEDURE coffee.proc_sale_stat()
BEGIN
	select  sum(@saleprice:=price*salecnt) sale_price, 
		sum(@addtax := ceil(@saleprice/11)) addtax_price, 
		sum(@supprice := @saleprice - @addtax) supply_price, 
		sum(@marPrice := round(@supprice * (marginrate/100))) margin_price 
	from  sale s join product p on s.code = p.code;
END;